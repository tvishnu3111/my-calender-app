{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/components/AdvancedEditableCalendar.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { addMonths, eachDayOfInterval, endOfMonth, endOfWeek, format, isSameMonth, startOfMonth, startOfWeek, isAfter, isSameDay } from 'date-fns'\r\nimport { ChevronLeft, ChevronRight, Plus, X, Save } from 'lucide-react'\r\n\r\nimport { Button } from \"../ui/button\"\r\nimport { Card, CardContent } from \"../ui/card\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../ui/select\"\r\nimport { Input } from \"../ui/input\"\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n\r\ninterface Event {\r\n  id: number\r\n  title: string\r\n  date: Date\r\n  color: string\r\n}\r\n\r\nexport default function AdvancedEditableCalendar() {\r\n  const today = new Date()\r\n  const [currentDate, setCurrentDate] = useState(today)\r\n  const [events, setEvents] = useState<Event[]>([])\r\n  const [editingEvent, setEditingEvent] = useState<number | null>(null)\r\n  const [newEventDate, setNewEventDate] = useState<Date | null>(null)\r\n  const [newEventTitle, setNewEventTitle] = useState('')\r\n\r\n  const changeMonth = (increment: number) => {\r\n    setCurrentDate(prevDate => addMonths(prevDate, increment))\r\n  }\r\n\r\n  const getDaysInMonth = (date: Date) => {\r\n    const start = startOfWeek(startOfMonth(date))\r\n    const end = endOfWeek(endOfMonth(date))\r\n    return eachDayOfInterval({ start, end })\r\n  }\r\n\r\n  const days = getDaysInMonth(currentDate)\r\n\r\n  const getEventsForDate = (date: Date) => {\r\n    return events.filter(event => \r\n      isSameDay(event.date, date)\r\n    )\r\n  }\r\n\r\n  const handleEventEdit = (id: number, newTitle: string) => {\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(event =>\r\n        event.id === id ? { ...event, title: newTitle } : event\r\n      )\r\n    )\r\n    setEditingEvent(null)\r\n  }\r\n\r\n  const handleEventDelete = (id: number) => {\r\n    setEvents(prevEvents => prevEvents.filter(event => event.id !== id))\r\n  }\r\n\r\n  const handleAddEvent = (date: Date) => {\r\n    if (isAfter(date, new Date()) || isSameDay(date, new Date())) {\r\n      setNewEventDate(date)\r\n      setNewEventTitle('')\r\n    }\r\n  }\r\n\r\n  const createNewEvent = () => {\r\n    if (newEventDate && newEventTitle.trim()) {\r\n      const newEvent: Event = {\r\n        id: Date.now(),\r\n        title: newEventTitle.trim(),\r\n        date: newEventDate,\r\n        color: `bg-${['blue', 'red', 'green', 'purple', 'yellow', 'pink'][Math.floor(Math.random() * 6)]}-100 text-${['blue', 'red', 'green', 'purple', 'yellow', 'pink'][Math.floor(Math.random() * 6)]}-800`\r\n      }\r\n      setEvents(prevEvents => [...prevEvents, newEvent])\r\n      setNewEventDate(null)\r\n      setNewEventTitle('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <aside className=\"w-64 bg-white p-4 border-r\">\r\n        <Button className=\"w-full mb-4\" onClick={() => handleAddEvent(new Date())}>\r\n          <Plus className=\"mr-2 h-4 w-4\" /> Create Event\r\n        </Button>\r\n        <nav className=\"space-y-2\">\r\n          <a href=\"#\" className=\"block px-4 py-2 rounded hover:bg-gray-100\">Month</a>\r\n          <a href=\"#\" className=\"block px-4 py-2 rounded hover:bg-gray-100\">Week</a>\r\n          <a href=\"#\" className=\"block px-4 py-2 rounded hover:bg-gray-100\">Day</a>\r\n        </nav>\r\n      </aside>\r\n\r\n      {/* Main content */}\r\n      <main className=\"flex-1 overflow-auto\">\r\n        {/* Header */}\r\n        <header className=\"bg-white p-4 flex items-center justify-between border-b sticky top-0 z-10\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Button variant=\"outline\" onClick={() => changeMonth(-1)}>\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={() => changeMonth(1)}>\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n            <h1 className=\"text-xl font-semibold\">\r\n              {format(currentDate, 'MMMM yyyy')}\r\n            </h1>\r\n          </div>\r\n          <Select defaultValue=\"month\">\r\n            <SelectTrigger className=\"w-[180px]\">\r\n              <SelectValue placeholder=\"Select view\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"month\">Month</SelectItem>\r\n              <SelectItem value=\"week\">Week</SelectItem>\r\n              <SelectItem value=\"day\">Day</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </header>\r\n\r\n        {/* Calendar grid */}\r\n        <div className=\"grid grid-cols-7 gap-px bg-gray-200 p-px\">\r\n          {DAYS.map(day => (\r\n            <div key={day} className=\"bg-white p-2 text-center font-semibold text-sm\">\r\n              {day}\r\n            </div>\r\n          ))}\r\n          {days.map((day, index) => (\r\n            <Card key={index} className={cn(\r\n              \"h-32 overflow-hidden\",\r\n              !isSameMonth(day, currentDate) && \"bg-gray-50 opacity-50\",\r\n              isSameDay(day, today) && \"ring-2 ring-blue-500\"\r\n            )}>\r\n              <CardContent className=\"p-2\">\r\n                <div className=\"text-right text-sm text-gray-500\">{format(day, 'd')}</div>\r\n                <div className=\"mt-1 space-y-1\">\r\n                  {getEventsForDate(day).map(event => (\r\n                    <div \r\n                      key={event.id} \r\n                      className={cn(\"text-xs rounded px-1 py-0.5 flex items-center justify-between\", event.color)}\r\n                    >\r\n                      {editingEvent === event.id ? (\r\n                        <Input\r\n                          type=\"text\"\r\n                          defaultValue={event.title}\r\n                          onBlur={(e) => handleEventEdit(event.id, e.target.value)}\r\n                          onKeyPress={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                              handleEventEdit(event.id, e.currentTarget.value)\r\n                            }\r\n                          }}\r\n                          className=\"w-full text-xs p-0 h-auto\"\r\n                          autoFocus\r\n                        />\r\n                      ) : (\r\n                        <>\r\n                          <span onClick={() => setEditingEvent(event.id)}>{event.title}</span>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"h-4 w-4 p-0 hover:bg-red-200\"\r\n                            onClick={() => handleEventDelete(event.id)}\r\n                          >\r\n                            <X className=\"h-3 w-3\" />\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {newEventDate && isSameDay(day, newEventDate) && (\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"New event\"\r\n                        value={newEventTitle}\r\n                        onChange={(e) => setNewEventTitle(e.target.value)}\r\n                        className=\"w-full text-xs p-0 h-6\"\r\n                        autoFocus\r\n                      />\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        className=\"h-6 w-6 p-0\"\r\n                        onClick={createNewEvent}\r\n                      >\r\n                        <Save className=\"h-3 w-3\" />\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {(isAfter(day, new Date()) || isSameDay(day, new Date())) && (\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    className=\"w-full mt-1 h-4 text-xs\"\r\n                    onClick={() => handleAddEvent(day)}\r\n                  >\r\n                    <Plus className=\"h-3 w-3 mr-1\" /> Add\r\n                  </Button>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}